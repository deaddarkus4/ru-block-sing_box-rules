# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: setup sing_box
        run: |
          sudo apt install -y sing-box

      - name: launch python
        run: |
          pip3 install requests 
          python3 main.py

      - name: Set ENV variables
        run: |
          echo "RELEASE_NAME=$(date +%Y%m%d%H%M)" >> $GITHUB_ENV
          echo "TAG_NAME=$(date +%Y%m%d%H%M)" >> $GITHUB_ENV
          echo "RELEASE_DATE=$(date +'%F %T %Z')" >> $GITHUB_ENV

      - name: read number of blocked ips
        run: |
          echo "NUM_IP=$(wc -l < curl -sSL https://antifilter.download/list/ip.lst)" >> $GITHUB_ENV

      - name: read number of blocked domains
        run: |
          echo "NUM_DOMAIN=$(wc -l < curl -sSL https://antifilter.download/list/domains.lst)" >> $GITHUB_ENV

      - name: Generate Release Notes
        run: | 
          echo "* Обновлён ${{ env.RELEASE_DATE }}" > RELEASE_NOTES
          echo "* Кол-во заблокированных доменов - ${{ env.NUM_DOMAIN }}" >> RELEASE_NOTES
          echo "* Кол-во заблокированных IP адресов - ${{ env.NUM_IP }}" >> RELEASE_NOTES

      - name: Push assets to release branch
        run: |
          cd release || exit 1
          git init
          git config --local user.name "github-actions[bot]"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git checkout -b release
          git add .
          git commit -m "${{ env.RELEASE_NAME }}"
          git remote add origin "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
          git push -f origin release

      - name: Release and upload assets
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ env.RELEASE_NAME }}
          tag_name: ${{ env.TAG_NAME }}
          body_path: RELEASE_NOTES
          draft: false
          prerelease: false
          files: |
            geoip-ru-block.srs
            geosite-ru-block.srs
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Clean older releases
        uses: dev-drprasad/delete-older-releases@v0.3.2
        with:
          keep_latest: 7
          delete_tags: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
